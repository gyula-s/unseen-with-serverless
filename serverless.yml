org: soosgyul
app: unseen-with-serverless-boilerplate
service: unseen-with-serverless-boilerplate

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, 'offline'}
  region: ${opt:region, 'us-east-1'}
  prismaEngine:
    offline: "node_modules/.prisma/client/*.node"
    staging: "node_modules/.prisma/client/libquery_engine-rhel*"
    prod: "node_modules/.prisma/client/libquery_engine-rhel*"

  esbuild:
    platform: "node"
    target: node16
    sourcemap: linked
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
    reloadHandler: true

provider:
  name: aws
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  runtime: nodejs16.x
  memorySize: 512
  timeout: 10
  logRetentionInDays: 90
  logs:
    httpApi: true
  httpApi:
    # metrics: true # Enable if you need
    cors: true

# Add the S3 bucket resource with properties
resources:
  Resources:
    HeroesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: soosgyul-heroes-bucket-${self:custom.stage}

    AccessRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: upload-policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:PutObjectAcl
                  Resource: !Sub
                    - "arn:aws:s3:::${BucketName}/*"
                    - { BucketName: !Ref HeroesBucket }

functions:
  app:
    handler: src/handler.handler
    # reservedConcurrency: 100
    events:
      - httpApi:
          path: "/"
          method: "*"
      - httpApi:
          path: "/score"
          method: "POST"
    role: AccessRole
    environment:
      BUCKET: soosgyul-heroes-bucket-${self:custom.stage}

package:
  patterns:
    - "!**/*.test.ts"
  individually: true

plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline
